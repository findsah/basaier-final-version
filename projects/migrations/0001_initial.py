# Generated by Django 2.0.3 on 2020-11-11 12:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('nameEn', models.CharField(max_length=100)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('inMenu', models.BooleanField(default=False)),
                ('inHomePage', models.BooleanField(default=False)),
                ('is_hide', models.BooleanField(default=False)),
                ('price', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='projects.Category')),
            ],
            options={
                'verbose_name_plural': '     Category',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Donate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('normal_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='projects.Category')),
            ],
            options={
                'verbose_name_plural': '    Donate',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=40, null=True)),
                ('name', models.CharField(max_length=100)),
                ('nameEn', models.CharField(max_length=100)),
                ('detail', tinymce.models.HTMLField(blank=True, null=True, verbose_name='detail')),
                ('detailEn', tinymce.models.HTMLField(blank=True, null=True, verbose_name='detailEn')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('is_defined', models.BooleanField()),
                ('defined_amount', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('is_closed', models.BooleanField()),
                ('is_hidden', models.BooleanField(choices=[(False, 'no'), (True, 'yes')], default=False)),
                ('deduction', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='projects/%Y/%m/%d')),
                ('image_small', models.ImageField(blank=True, null=True, upload_to='projects_small/%Y/%m/%d')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('suggestedDonation', models.DecimalField(decimal_places=3, default=1.0, max_digits=10)),
                ('normal_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('isZakat', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('is_share', models.BooleanField(default=0)),
                ('share_jump', models.IntegerField(default=0)),
                ('share_count', models.IntegerField(default=0)),
                ('projects_dep_email', models.CharField(blank=True, max_length=255, null=True)),
                ('finaince_dep_email', models.CharField(blank=True, max_length=255, null=True)),
                ('donater_name', models.CharField(blank=True, max_length=255, null=True)),
                ('donater_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.ManyToManyField(to='projects.Category')),
            ],
            options={
                'verbose_name_plural': '   Project',
            },
        ),
        migrations.CreateModel(
            name='ProjectsDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('titleEn', models.CharField(blank=True, max_length=255)),
                ('document', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sacrifice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('Sheep', 'Sheep'), ('Camel', 'Camel'), ('Cow', 'Cow'), ('Goat', 'Goat')], max_length=50)),
                ('availability', models.IntegerField(default=0)),
                ('price', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='country', to='projects.Country')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project', to='projects.Project')),
            ],
        ),
        migrations.CreateModel(
            name='SMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Void', 'Void')], max_length=10)),
                ('payment_method', models.CharField(choices=[('Knet', 'Knet'), ('Knet_machine', 'Knet_machine'), ('CreditCard', 'Credit Card'), ('Cash', 'Cash')], default='Knet', max_length=20)),
                ('knet_payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('result', models.CharField(blank=True, choices=[('CAPTURED', 'Captured'), ('NOT CAPTURED', 'Not Captured'), ('HOST TIMEOUT', 'Host Timeout'), ('DENIED BY RISK', 'Denied By Risk'), ('CANCELED', 'Cancelled'), ('VOIDED', 'Voided')], max_length=20, null=True)),
                ('auth_code', models.CharField(blank=True, max_length=255, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('trans_id', models.CharField(blank=True, max_length=255, null=True)),
                ('post_date', models.CharField(blank=True, max_length=255, null=True)),
                ('successIndicator', models.CharField(blank=True, max_length=255, null=True)),
                ('tap_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_tap_payment', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': '  Transaction',
            },
        ),
        migrations.AddField(
            model_name='sms',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.Transaction'),
        ),
        migrations.AddField(
            model_name='donate',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='donations', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='donate',
            name='sacrifice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sacrifice', to='projects.Sacrifice'),
        ),
        migrations.AddField(
            model_name='donate',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transaction', to='projects.Transaction'),
        ),
        migrations.AddField(
            model_name='donate',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='TransactionCash',
            fields=[
            ],
            options={
                'verbose_name_plural': ' Cash Transaction',
                'proxy': True,
                'indexes': [],
            },
            bases=('projects.transaction',),
        ),
        migrations.CreateModel(
            name='TransactionKNETMachine',
            fields=[
            ],
            options={
                'verbose_name_plural': ' TransactionKNETMachine',
                'proxy': True,
                'indexes': [],
            },
            bases=('projects.transaction',),
        ),
    ]
